<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wpf - 浩の快乐小站</title>
    <link>http://localhost:1313/wpf/</link>
    <description>浩の快乐小站</description>
    <generator>Hugo 0.148.2 &amp; FixIt v0.4.0-alpha-20250721024521-a1cd700b</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 12 Oct 2025 16:32:43 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/wpf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WPF基础</title>
      <link>http://localhost:1313/wpf/b33113a1-613e-499c-b440-d349011391a3/</link>
      <pubDate>Sun, 12 Oct 2025 16:32:43 +0800</pubDate><author>espholychan@outllook.com (hao)</author>
      <guid>http://localhost:1313/wpf/b33113a1-613e-499c-b440-d349011391a3/</guid>
      <category domain="http://localhost:1313/categories/draft/">Draft</category>
      <description>&lt;h2 class=&#34;heading-element&#34; id=&#34;wpf介绍&#34;&gt;&lt;span&gt;WPF介绍&lt;/span&gt;&#xD;&#xA;  &lt;a href=&#34;#wpf%e4%bb%8b%e7%bb%8d&#34; class=&#34;heading-mark&#34;&gt;&#xD;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;WPF（Windows Presentation Foundation）是微软推出的一种用于构建桌面应用程序的图形子系统。它提供了一种统一的编程模型，用于创建具有丰富用户界面的应用程序。WPF基于XAML（eXtensible Application Markup Language）语言，使得开发者可以通过声明式的方式定义用户界面，同时支持数据绑定、动画、样式和模板等功能。&lt;/p&gt;&#xA;&lt;p&gt;WPF的主要特点包括：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;矢量图形&lt;/strong&gt;：WPF使用矢量图形渲染界面，使得应用程序在不同分辨率下都能保持清晰。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据绑定&lt;/strong&gt;：WPF支持强大的数据绑定功能，可以轻松地将UI元素与数据源连接起来，实现动态更新。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;样式和模板&lt;/strong&gt;：WPF允许开发者定义样式和控制模板，使得界面可以高度定制化。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;动画和媒体支持&lt;/strong&gt;：WPF内置了对动画和多媒体的支持，可以创建丰富的用户体验。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;布局系统&lt;/strong&gt;：WPF提供了灵活的布局系统，可以根据窗口大小自动调整UI元素的位置和大小。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;WPF广泛应用于各种桌面应用程序的开发，特别适合需要复杂用户界面的应用，如图形设计工具、数据可视化应用等。通过WPF，开发者可以创建现代化、响应迅速且具有吸引力的桌面应用程序。&lt;/p&gt;&#xA;&lt;h2 class=&#34;heading-element&#34; id=&#34;wpf的基本概念&#34;&gt;&lt;span&gt;WPF的基本概念&lt;/span&gt;&#xD;&#xA;  &lt;a href=&#34;#wpf%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5&#34; class=&#34;heading-mark&#34;&gt;&#xD;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;XAML（eXtensible Application Markup Language）&lt;/strong&gt;：WPF使用XAML作为主要的用户界面定义语言。XAML是一种基于XML的标记语言，允许开发者以声明式的方式定义UI元素、布局和行为。通过XAML，开发者可以清晰地描述界面的结构和外观。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;控件（Controls）&lt;/strong&gt;：WPF提供了丰富的内置控件，如按钮、文本框、列表框等，这些控件可以直接在XAML中使用。控件是用户界面的基本构建块，开发者可以通过设置属性和事件来定制它们的行为和外观。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;布局（Layout）&lt;/strong&gt;：WPF提供了多种布局容器，如Grid、StackPanel、DockPanel等，用于组织和排列UI元素。布局容器可以根据窗口大小自动调整子元素的位置和大小，确保界面在不同分辨率下都能良好显示。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据绑定（Data Binding）&lt;/strong&gt;：WPF支持强大的数据绑定功能，允许UI元素与数据源（如对象、集合等）进行连接。通过数据绑定，UI可以自动反映数据的变化，实现动态更新。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;样式和模板（Styles and Templates）&lt;/strong&gt;：WPF允许开发者定义样式和控制模板，以实现界面的高度定制化。样式可以统一设置控件的外观，而模板则可以完全改变控件的结构和行为。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;事件（Events）&lt;/strong&gt;：WPF使用事件驱动模型，允许开发者响应用户交互（如点击、输入等）。WPF支持路由事件机制，可以在控件树中传播事件，方便事件处理。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;命令（Commands）&lt;/strong&gt;：WPF引入了命令概念，允许将用户操作与应用程序逻辑解耦。命令可以绑定到控件上，实现统一的操作处理。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;动画（Animation）&lt;/strong&gt;：WPF内置了对动画的支持，允许开发者创建丰富的用户体验。通过动画，可以实现控件的平滑过渡、移动、缩放等效果。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;资源（Resources）&lt;/strong&gt;：WPF允许开发者定义和使用资源，如颜色、样式、模板等。资源可以在应用程序的不同部分共享，促进代码的重用和维护。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;依赖属性（Dependency Properties）&lt;/strong&gt;：WPF引入了依赖属性机制，允许属性值通过数据绑定、样式等方式动态变化。依赖属性支持属性值的继承和变化通知，增强了属性的灵活性。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;视觉树（Visual Tree）和逻辑树（Logical Tree）&lt;/strong&gt;：WPF中的UI元素组织成两种树结构。视觉树表示实际渲染的元素，而逻辑树表示元素的逻辑关系。理解这两种树结构有助于处理事件和布局。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;命令绑定（Command Binding）&lt;/strong&gt;：WPF允许将命令与命令处理程序绑定，简化了用户操作的处理。通过命令绑定，可以实现统一的操作逻辑。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;多线程支持（Multithreading Support）&lt;/strong&gt;：WPF支持多线程编程，允许在后台线程中执行耗时操作，同时保持UI的响应性。WPF提供了Dispatcher机制，用于在UI线程上执行操作。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;3D图形支持（3D Graphics Support）&lt;/strong&gt;：WPF内置了对3D图形的支持，允许开发者创建三维用户界面和图形效果。通过3D图形，可以实现更丰富的视觉体验。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;文档和打印支持（Document and Printing Support）&lt;/strong&gt;：WPF提供了对文档和打印的支持，允许开发者创建和打印复杂的文档内容。WPF支持固定文档和流文档两种文档类型。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;国际化和本地化（Internationalization and Localization）&lt;/strong&gt;：WPF支持国际化和本地化，  允许开发者创建多语言应用程序。通过资源文件，可以轻松地管理不同语言的文本和资源。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;触摸和手势支持（Touch and Gesture Support）&lt;/strong&gt;：WPF支持触摸屏和手势操作，允许开发者创建适应现代硬件的应用程序。通过触摸和手势，可以实现更自然的用户交互。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 class=&#34;heading-element&#34; id=&#34;wpf的项目结构&#34;&gt;&lt;span&gt;WPF的项目结构&lt;/span&gt;&#xD;&#xA;  &lt;a href=&#34;#wpf%e7%9a%84%e9%a1%b9%e7%9b%ae%e7%bb%93%e6%9e%84&#34; class=&#34;heading-mark&#34;&gt;&#xD;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;一个典型的WPF项目结构通常包括以下主要部分：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;App.xaml&lt;/strong&gt;：这是应用程序的入口文件，定义了应用程序的资源和启动逻辑。App.xaml.cs文件包含应用程序的代码逻辑。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;MainWindow.xaml&lt;/strong&gt;：这是应用程序的主窗口文件，定义了主界面的布局和控件。MainWindow.xaml.cs文件包含主窗口的代码逻辑。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Views文件夹&lt;/strong&gt;：用于存放应用程序的其他窗口和用户控件的XAML文件及其对应的代码文件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Models文件夹&lt;/strong&gt;：用于存放应用程序的数据模型类，定义应用程序的数据结构和业务逻辑。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ViewModels文件夹&lt;/strong&gt;：用于存放视图模型类，负责连接视图和模型，实现数据绑定和命令处理。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resources文件夹&lt;/strong&gt;：用于存放应用程序的资源文件，如样式、模板、图像等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Converters文件夹&lt;/strong&gt;：用于存放值转换器类，负责在数据绑定过程中转换数据格式。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Services文件夹&lt;/strong&gt;：用于存放应用程序的服务类，负责处理数据访问、网络请求等功能。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Properties文件夹&lt;/strong&gt;：包含应用程序的属性设置文件，如AssemblyInfo.cs和Settings.settings。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Packages文件夹&lt;/strong&gt;：用于存放通过NuGet安装的第三方库和依赖项。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;App.config&lt;/strong&gt;：应用程序的配置文件，用于存储应用程序的设置和配置信息。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;项目文件（.csproj）&lt;/strong&gt;：包含项目的配置信息，如引用的库、编译选项等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;其他文件&lt;/strong&gt;：根据项目需求，可能还会包含其他文件和文件夹，如文档、测试代码等。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这个结构可以根据具体项目的需求进行调整和扩展，但通常会包含上述主要部分，以便组织和管理WPF应用程序的代码和资源。&lt;/p&gt;&#xA;&lt;h2 class=&#34;heading-element&#34; id=&#34;xaml基础&#34;&gt;&lt;span&gt;XAML基础&lt;/span&gt;&#xD;&#xA;  &lt;a href=&#34;#xaml%e5%9f%ba%e7%a1%80&#34; class=&#34;heading-mark&#34;&gt;&#xD;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;XAML（eXtensible Application Markup Language）是一种基于XML的标记语言，用于定义WPF应用程序的用户界面。通过XAML，开发者可以以声明式的方式描述UI元素、布局和行为，使得界面的结构和外观更加清晰和易于维护。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;xaml的基本语法&#34;&gt;&lt;span&gt;XAML的基本语法&lt;/span&gt;&#xD;&#xA;  &lt;a href=&#34;#xaml%e7%9a%84%e5%9f%ba%e6%9c%ac%e8%af%ad%e6%b3%95&#34; class=&#34;heading-mark&#34;&gt;&#xD;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;元素（Elements）&lt;/strong&gt;：XAML中的每个UI组件都表示为一个元素。例如，按钮表示为&lt;Button&gt;元素，文本框表示为&lt;TextBox&gt;元素。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;TextBox Text=&amp;#34;Enter text here&amp;#34; Width=&amp;#34;200&amp;#34;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;属性（Attributes）&lt;/strong&gt;：元素可以通过属性来设置其外观和行为。例如，设置按钮的内容、宽度和高度。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;嵌套（Nesting）&lt;/strong&gt;：XAML允许元素嵌套在其他元素内部，以表示层次结构。例如，将按钮放在StackPanel中。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xml&amp;lt;StackPanel&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;Button Content=&amp;#34;Button 1&amp;#34; Width=&amp;#34;100&amp;#34; Height=&amp;#34;30&amp;#34;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;Button Content=&amp;#34;Button 2&amp;#34; Width=&amp;#34;100&amp;#34; Height=&amp;#34;30&amp;#34;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;命名空间（Namespaces）&lt;/strong&gt;：XAML使用XML命名空间来区分不同的元素和属性。通常，WPF元素使用默认命名空间。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;注释（Comments）&lt;/strong&gt;：XAML支持注释，可以使用&lt;!-- --&gt;来添加注释。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;Button Content=&amp;#34;Click Me&amp;#34; Width=&amp;#34;100&amp;#34; Height=&amp;#34;30&amp;#34;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
